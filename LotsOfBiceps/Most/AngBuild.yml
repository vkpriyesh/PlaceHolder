trigger:
  branches:
    include:
      - main

variables:
  appName: 'your-app-service-name'
  runtimeStack: 'NODE|14-lts'
  workingDirectory: 'your-angular-app-directory'

jobs:
- job: Build
  displayName: 'Build'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: '$(workingDirectory)'
    displayName: 'npm install'

  - task: Npm@1
    inputs:
      command: 'run'
      workingDir: '$(workingDirectory)'
      arguments: 'build --prod'
    displayName: 'npm run build'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(workingDirectory)/dist/your-app-name' # Update with your Angular app's build output folder
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true
    displayName: 'Archive files'

- job: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: AzureRmWebAppDeployment@4
    displayName: 'Azure App Service Deploy'
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'your-azure-subscription'
      appType: 'webApp'
      WebAppName: '$(appName)'
      packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      runtimeStack: '$(runtimeStack)'

trigger:
  branches:
    include:
      - main

variables:
  appName: 'your-app-service-name'
  runtimeStack: 'NODE|14-lts'
  workingDirectory: 'your-angular-app-directory'

jobs:
- job: Build
  displayName: 'Build'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: '$(workingDirectory)'
    displayName: 'npm install'

  - task: Npm@1
    inputs:
      command: 'run'
      workingDir: '$(workingDirectory)'
      arguments: 'build --prod'
    displayName: 'npm run build'

- job: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: AzureRmWebAppDeployment@4
    displayName: 'Azure App Service Deploy'
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'your-azure-subscription'
      appType: 'webApp'
      WebAppName: '$(appName)'
      packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      runtimeStack: '$(runtimeStack)'
